/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <4 5>;  // R + T
            bindings = <&kp LPAR>;
        };

        combo_rpar {
            timeout-ms = <50>;
            key-positions = <6 7>;  // Y + U
            bindings = <&kp RPAR>;
        };

        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <16 17>; // F + G
            bindings = <&kp LBKT>;
        };

        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <18 19>; // H + J
            bindings = <&kp RBKT>;
        };

        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <28 29>; // V + B
            bindings = <&kp LBRC>;
        };

        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <30 31>; // N + M
            bindings = <&kp RBRC>;
        };

        combo_esc {
            timeout-ms = <50>;
            key-positions = <19 20>; // J + K
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |A/GUI|S/ALT|D/SFT|F/CTL|  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            bindings = <
   &kp TAB   &kp Q        &kp W        &kp E         &kp R         &kp T      &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &hm LGUI A   &hm LALT S   &hm LSHFT D   &hm LCTRL F   &kp G      &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z        &kp X        &kp C         &kp V         &kp B      &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                                       &kp LGUI      &mo 1         &kp SPACE  &kp RET &mo 2 &kp RALT
            >;
        };

        lower_layer {
            display-name = "Numbers";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | CTRL | F1  | F2  | F3  | F4  | F5  |   | LFT | DWN |  UP | RGT | F11 | F12  |
// | SHFT | F6  | F7  | F8  | F9  | F10 |   | HOME| PGDN| PGUP| END |     | ADJ  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
   &kp TAB    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
   &kp LCTRL  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp F11 &kp F12
   &kp LSHFT  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10    &kp HOME  &kp PG_DN &kp PG_UP &kp END    &trans  &mo 3
                              &kp LGUI &trans  &kp SPACE  &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            display-name = "Symbols";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | ADJ  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &mo 3
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
            >;
        };

        adjust_layer {
            display-name = "Adjust";
// -----------------------------------------------------------------------------------------
// |RGBTOG|RGBBRI|RGBBRD|RGBHUI|RGBHUD|RGBSAI|   |RGBSAD|RGBEFF|RGBEFR|     |     |EP_TOG|
// |BTCLR | BT1  | BT2  | BT3  | BT4  | BT5  |   | VOL- | MUTE | VOL+ | PREV| PLAY| NEXT |
// |RESET |BOOTL |      |      |      |      |   |      |      |      |     |     |      |
//                      |      |      |      |   |      |      |      |
            bindings = <
   &rgb_ug RGB_TOG &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_HUI &rgb_ug RGB_HUD &rgb_ug RGB_SAI   &rgb_ug RGB_SAD &rgb_ug RGB_EFF &rgb_ug RGB_EFR &trans      &trans       &ext_power EP_TOG
   &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4      &kp C_VOL_DN    &kp C_MUTE      &kp C_VOL_UP    &kp C_PREV  &kp C_PP     &kp C_NEXT
   &sys_reset      &bootloader     &trans          &trans          &trans          &trans            &trans          &trans          &trans          &trans      &trans       &trans
                                                   &trans          &trans          &trans            &trans          &trans          &trans
            >;
        };
    };
};
